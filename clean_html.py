#!/usr/bin/env python3
"""
Script de nettoyage rapide pour les notebooks Jupyter
Supprime uniquement les fichiers HTML sans toucher aux caches Python
"""

import os
import glob
from pathlib import Path

def clean_html_only():
    """Supprime uniquement les fichiers HTML g√©n√©r√©s"""
    print("üóëÔ∏è  Nettoyage rapide - Suppression des fichiers HTML...")
    
    # Patterns sp√©cifiques aux visualisations HTML
    html_patterns = [
        "dashboard_*.html",
        "carte_*.html", 
        "temporal_*.html",
        "*.html"
    ]
    
    count = 0
    for pattern in html_patterns:
        for file_path in glob.glob(pattern):
            # √âviter de supprimer les fichiers HTML importants comme index.html
            if not file_path.startswith(('index', 'README', 'doc')):
                try:
                    os.remove(file_path)
                    print(f"   ‚úÖ Supprim√©: {file_path}")
                    count += 1
                except OSError as e:
                    print(f"   ‚ö†Ô∏è  Erreur: {file_path} - {e}")
    
    return count

def main():
    """Fonction principale de nettoyage rapide"""
    print("üßπ NETTOYAGE RAPIDE - Fichiers HTML seulement")
    print("="*45)
    
    # Changement vers le r√©pertoire du script
    script_dir = Path(__file__).parent
    os.chdir(script_dir)
    
    # Nettoyage HTML uniquement
    total_cleaned = clean_html_only()
    
    print("="*45)
    if total_cleaned > 0:
        print(f"‚úÖ Nettoyage rapide termin√© ! {total_cleaned} fichiers HTML supprim√©s")
    else:
        print("üéâ Aucun fichier HTML √† supprimer")
    
    # V√©rification finale
    remaining_html = [f for f in glob.glob("*.html") if not f.startswith(('index', 'README', 'doc'))]
    if remaining_html:
        print(f"‚ÑπÔ∏è  Fichiers HTML restants (non supprim√©s): {remaining_html}")

if __name__ == "__main__":
    main()
